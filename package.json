{
  "name": "malware-detection-frontend",
  "version": "1.0.0",
  "private": false,
  "engines": {
    "node": ">=14.0.0",
    "npm": ">=7.0.0"
  },
  "scripts": {
    "build": "fec build",
    "deploy": "npm-run-all build lint test",
    "lint": "npm-run-all lint:*",
    "lint:js": "eslint config src",
    "lint:js:fix": "eslint config src --fix",
    "lint:sass": "stylelint 'src/**/*.scss' --config .stylelintrc.json",
    "nightly": "npm run deploy",
    "server:ctr": "node src/server/generateServerKey.js",
    "start": "fec dev",
    "start:proxy": "PROXY=true fec dev",
    "test": "jest --passWithNoTests --no-cache",
    "test:ct": "BABEL_ENV=component cypress run --component",
    "translations": "npm-run-all translations:*",
    "translations:extract": "npx @formatjs/cli extract 'src/**/*.js*' --out-file ./build/messages/src/Messages.json --id-interpolation-pattern '[sha512:contenthash:base64:6]'",
    "translations:compile": "npx @formatjs/cli compile 'build/messages/src/Messages.json' --out-file ./locales/translations.json",
    "travis:build": "npm run build",
    "travis:verify": "npm-run-all travis:build lint test",
    "verify": "npm-run-all build lint test",
    "coverage": "bash coverage.sh && npm run coverage:clean",
    "coverage:clean": "rm -rf .nyc_output coverage reports",
    "postinstall": "ts-patch install"
  },
  "jest": {
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.{js,jsx}",
      "!src/**/*.cy.js",
      "!src/{entry,entry-dev}.js"
    ],
    "coverageDirectory": "./coverage/",
    "moduleNameMapper": {
      "\\.(css|scss)$": "identity-obj-proxy"
    },
    "roots": [
      "<rootDir>/src/"
    ]
  },
  "dependencies": {
    "@apollo/client": "^3.8.8",
    "@babel/runtime": "^7.24.0",
    "@cypress/code-coverage": "^3.10.0",
    "@cypress/webpack-dev-server": "^3.1.1",
    "@patternfly/patternfly": "^5.3.1",
    "@patternfly/react-charts": "^7.3.0",
    "@patternfly/react-code-editor": "^5.3.3",
    "@patternfly/react-component-groups": "^5.2.0",
    "@patternfly/react-core": "^5.2.1",
    "@patternfly/react-icons": "^5.2.1",
    "@patternfly/react-table": "^5.2.1",
    "@redhat-cloud-services/frontend-components": "^4.2.10",
    "@redhat-cloud-services/frontend-components-notifications": "^4.1.0",
    "@redhat-cloud-services/frontend-components-translations": "^3.2.7",
    "@redhat-cloud-services/frontend-components-utilities": "^4.0.11",
    "axios": "^1.6.5",
    "classnames": "^2.3.1",
    "cypress": "^13.12.0",
    "graphql": "^15.5.3",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-intl": "^6.5.5",
    "react-redux": "^9.0.4",
    "react-router-dom": "^6.8.1",
    "redux": "^5.0.1",
    "redux-logger": "^3.0.6",
    "redux-promise-middleware": "^6.2.0"
  },
  "devDependencies": {
    "@babel/core": "^7.24.0",
    "@babel/eslint-parser": "^7.23.10",
    "@babel/plugin-transform-runtime": "^7.24.0",
    "@babel/preset-env": "^7.24.0",
    "@babel/preset-react": "^7.23.3",
    "@redhat-cloud-services/eslint-config-redhat-cloud-services": "^2.0.3",
    "@redhat-cloud-services/frontend-components-config": "^6.0.16",
    "@redhat-cloud-services/tsc-transform-imports": "^1.0.11",
    "babel-loader": "^9.1.2",
    "babel-plugin-istanbul": "^6.1.1",
    "eslint": "^8.43.0",
    "eslint-plugin-cypress": "^3.3.0",
    "eslint-plugin-jest-dom": "^5.1.0",
    "eslint-plugin-testing-library": "^6.2.0",
    "identity-obj-proxy": "3.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "npm-run-all": "4.1.5",
    "prop-types": "^15.7.2",
    "stylelint": "^16.1.0",
    "stylelint-config-recommended-scss": "^14.0.0",
    "stylelint-scss": "^6.0.0",
    "ts-patch": "^3.1.1",
    "typescript": "^5.3.3"
  },
  "insights": {
    "appname": "malware"
  },
  "routes": {
    "prefix": "insights",
    "appname": "malware",
    "details": "/details",
    "oops": "/oops",
    "noPermissions": "/no-permissions"
  },
  "nyc": {
    "report-dir": "cypress-coverage",
    "include": [
      "src/**/*.{js,jsx}"
    ],
    "exclude": [
      "src/**/*.spec.ct.js",
      "src/**/*.test.js",
      "src/**/*.cy.js",
      "src/{entry,entry-dev}.js"
    ]
  }
}
