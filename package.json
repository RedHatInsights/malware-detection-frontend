{
  "name": "yara-frontend",
  "version": "1.0.0",
  "private": false,
  "scripts": {
    "build": "webpack --config config/prod.webpack.config.js",
    "build:prod": "NODE_ENV=production webpack --config config/prod.webpack.config.js",
    "deploy": "npm-run-all build:prod lint test",
    "lint": "npm-run-all lint:*",
    "lint:js": "eslint config src",
    "lint:js:fix": "eslint config src --fix",
    "lint:sass": "stylelint 'src/**/*.scss' --config .stylelintrc.json",
    "nightly": "npm run deploy",
    "prod": "NODE_ENV=production webpack-dev-server --config config/dev.webpack.config.js",
    "server:ctr": "node src/server/generateServerKey.js",
    "start": "NODE_ENV=development webpack-dev-server --config config/dev.webpack.config.js",
    "test": "jest --verbose",
    "translations": "npm-run-all translations:*",
    "translations:extract": "npx @formatjs/cli extract 'src/**/*.js*' --out-file ./build/messages/src/Messages.json --extract-from-format-message-call --id-interpolation-pattern '[sha512:contenthash:base64:6]'",
    "translations:compile": "npx @formatjs/cli compile 'build/messages/src/Messages.json' --out-file ./locales/translations.json",
    "travis:build": "NODE_ENV=production webpack --config config/prod.webpack.config.js",
    "travis:verify": "npm-run-all travis:build lint test",
    "verify": "npm-run-all build lint test"
  },
  "jest": {
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.js",
      "!src/**/stories/*"
    ],
    "coverageDirectory": "./coverage/",
    "moduleNameMapper": {
      "\\.(css|scss)$": "identity-obj-proxy"
    },
    "roots": [
      "<rootDir>/src/"
    ],
    "setupFiles": [
      "<rootDir>/config/setupTests.js"
    ]
  },
  "transformIgnorePatterns": [
    "/node_modules/(?!@redhat-cloud-services)"
  ],
  "dependencies": {
    "@apollo/client": "3.3.6",
    "@babel/runtime": "7.12.5",
    "@patternfly/patternfly": "4.70.2",
    "@patternfly/react-core": "4.84.4",
    "@patternfly/react-icons": "4.7.22",
    "@patternfly/react-table": "4.19.45",
    "@redhat-cloud-services/frontend-components": "2.5.3",
    "@redhat-cloud-services/frontend-components-inventory-insights": "2.6.6",
    "@redhat-cloud-services/frontend-components-translations": "2.2.1",
    "@redhat-cloud-services/frontend-components-utilities": "2.2.8",
    "classnames": "2.2.6",
    "graphql": "15.4.0",
    "react": "17.0.1",
    "react-dom": "17.0.1",
    "react-intl": "5.10.9",
    "react-markdown": "5.0.3",
    "react-redux": "7.2.2",
    "react-router-dom": "5.2.0",
    "redux": "4.0.5",
    "redux-logger": "3.0.6",
    "redux-promise-middleware": "6.1.2"
  },
  "devDependencies": {
    "@babel/core": "7.12.10",
    "@babel/plugin-proposal-object-rest-spread": "7.12.1",
    "@babel/plugin-syntax-dynamic-import": "7.8.3",
    "@babel/plugin-transform-runtime": "7.12.10",
    "@babel/preset-env": "7.12.11",
    "@babel/preset-flow": "7.12.1",
    "@babel/preset-react": "7.12.10",
    "@redhat-cloud-services/frontend-components-config": "2.1.9",
    "axios": "0.21.1",
    "babel-core": "7.0.0-bridge.0",
    "babel-eslint": "10.1.0",
    "babel-jest": "26.6.3",
    "babel-plugin-dual-import": "1.2.1",
    "babel-plugin-transform-imports": "2.0.0",
    "cross-fetch": "3.0.6",
    "css-loader": "3.6.0",
    "enzyme": "3.11.0",
    "enzyme-adapter-react-16": "1.15.5",
    "enzyme-to-json": "3.6.1",
    "eslint": "7.16.0",
    "eslint-config-prettier": "7.1.0",
    "eslint-loader": "4.0.2",
    "eslint-plugin-react": "7.21.5",
    "eslint-plugin-react-hooks": "4.2.0",
    "identity-obj-proxy": "3.0.0",
    "jest": "26.6.3",
    "node-sass": "4.14.1",
    "npm-run-all": "4.1.5",
    "postcss": "8.2.1",
    "prop-types": "15.7.2",
    "stylelint": "13.8.0",
    "stylelint-config-recommended-scss": "4.2.0",
    "stylelint-scss": "3.18.0",
    "typescript": "4.1.3",
    "webpack": "4.44.2",
    "webpack-bundle-analyzer": "4.3.0",
    "webpack-cli": "3.3.12"
  },
  "insights": {
    "appname": "malware"
  },
  "routes": {
    "prefix": "insights",
    "appname": "malware",
    "details": "/details",
    "oops": "/oops",
    "noPermissions": "/no-permissions"
  }
}
