// import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';
import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';
import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';
import promiseMiddleware from 'redux-promise-middleware';

let registry;

export function init (...middleware) {
    if (registry) {
        throw new Error('store already initialized');
    }

    registry = getRegistry({}, [
        promiseMiddleware,
        ...middleware
    ]);

    return registry;
}

export function getStore () {
    return registry.getStore();
}

export function register (...args) {
    return registry.register(...args);
}

const selectRows = (rows, selected) =>
    rows.map((row) => ({
        ...row,
        selected: selected.includes(row.id)
    }));

export const entitiesReducer = () =>
    applyReducerHash({
        ['INVENTORY_INIT']: () => ({
            rows: [],
            total: 0
        }),
        ['RESET_PAGE']: (state) => ({
            ...state,
            page: 1
        }),
        ['SELECT_ENTITIES']: (state, { payload: { selected } }) => ({
            ...state,
            rows: selectRows(state.rows || [], selected)
        })
    });
