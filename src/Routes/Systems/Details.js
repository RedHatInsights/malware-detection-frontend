import React, { useEffect } from 'react';
import PropTypes from 'prop-types';
import { useIntl } from 'react-intl';
import { useParams } from 'react-router-dom';
import { useQuery } from '@apollo/client';
import { Grid, GridItem, Title } from '@patternfly/react-core';
import { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';
import { Main } from '@redhat-cloud-services/frontend-components/Main';
import {
  PageHeader,
  PageHeaderTitle,
} from '@redhat-cloud-services/frontend-components/PageHeader';
import { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';
import { GET_SYSTEMS_DETAILS_PAGE } from '../../operations/queries';
import Loading from '../../Components/Loading/Loading';
import Breadcrumb from '../../Components/Breadcrumb/Breadcrumb';
import SysDetailsTable from '../../Components/SysDetailsTable/SysDetailsTable';
import messages from '../../Messages';
import { totalMatchesTitle } from '../../Components/Common';
import './Details.scss';

const Details = () => {
  const intl = useIntl();
  const { id: sysId } = useParams();
  const { data, loading } = useQuery(GET_SYSTEMS_DETAILS_PAGE, {
    variables: { id: sysId },
  });
  const sysData = data?.hosts?.nodes[0];
  const breadcrumbs = [
    {
      name: intl.formatMessage(messages.malwareDetectionSys),
      to: `/systems`,
    },
    { name: sysData?.displayName, to: '#' },
  ];
  const detailBlock = (title, detail) => (
    <React.Fragment>
      <p>{title}</p>
      <p>{detail}</p>
    </React.Fragment>
  );

  const chrome = useChrome();

  useEffect(() => {
    sysData &&
      chrome.updateDocumentTitle(`${sysData.displayName} - Systems - Malware`);
  }, [chrome, sysData]);

  return (
    <React.Fragment>
      <PageHeader>
        <Breadcrumb items={breadcrumbs} />
        <PageHeaderTitle title={sysData?.displayName} className="pf-u-mb-md" />
        <Grid hasGutter>
          {loading ? (
            <Loading />
          ) : (
            <GridItem xl={5} lg={12} md={12} sm={12}>
              <Grid hasGutter>
                <GridItem span={12}>
                  {
                    <p>{`${intl.formatMessage(messages.uuid)}: ${
                      sysData?.id
                    }`}</p>
                  }
                </GridItem>
                <GridItem span={4}>
                  {detailBlock(
                    intl.formatMessage(messages.lastmatch),
                    sysData?.lastMatchDate ? (
                      <DateFormat
                        date={new Date(sysData?.lastMatchDate)}
                        type="onlyDate"
                      />
                    ) : (
                      intl.formatMessage(messages.never)
                    )
                  )}
                </GridItem>
                <GridItem span={4}>
                  {detailBlock(
                    intl.formatMessage(messages.lastScan),
                    <DateFormat
                      date={new Date(sysData?.lastScanDate)}
                      type="exact"
                    />
                  )}
                </GridItem>
                <GridItem span={4}>
                  {detailBlock(
                    totalMatchesTitle({
                      tooltip: intl.formatMessage(messages.totalMatchesNote),
                      title: intl.formatMessage(messages.totalMatches),
                    }),
                    sysData?.totalMatches
                  )}
                </GridItem>
              </Grid>
            </GridItem>
          )}
          <GridItem md={7} sm={0}></GridItem>
        </Grid>
      </PageHeader>
      <Main>
        <Title className="ins-l-tableBlockHeader" headingLevel="h2">
          {intl.formatMessage(messages.matchedSignaturesCount, {
            matchedCount: sysData?.totalMatches,
          })}
        </Title>
        {!sysData?.id ? (
          <Loading />
        ) : (
          <SysDetailsTable systemId={sysData?.id} />
        )}
      </Main>
    </React.Fragment>
  );
};

Details.propTypes = {
  title: PropTypes.string,
};
export default Details;
