import { GET_SIGNATURE_PAGE, GET_TIME_SERIES_STATS } from '../../operations/queries';
import { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';
import React, { Suspense, lazy } from 'react';
import { Title, TitleSizes } from '@patternfly/react-core/dist/esm/components/Title';

import Loading from '../../Components/Loading/Loading';
import { Main } from '@redhat-cloud-services/frontend-components/Main';
import { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';
import messages from '../../Messages';
import { useIntl } from 'react-intl';
import { useQuery } from '@apollo/client';
import { withRouter } from 'react-router-dom';
import EmptyAccount from '../../Components/SharedComponents/EmptyAccount';
import { globalFilters, hasMalware } from '../../store/cache';
import { Alert } from '@patternfly/react-core';

const SysTable = lazy(() => import(/* webpackChunkName: 'SigTable' */ '../../Components/SysTable/SysTable'));
const StatusCard = lazy(() => import(/* webpackChunkName: 'StatusCard' */ '../../Components/StatusCard/StatusCard'));
const ChartCard = lazy(() => import(/* webpackChunkName: 'ChartCard' */ '../../Components/ChartCard/ChartCard'));

const Systems = () => {
    const intl = useIntl();
    const sigPageData = useQuery(GET_SIGNATURE_PAGE);
    const chartCmpData = useQuery(GET_TIME_SERIES_STATS);

    return <React.Fragment>
        <PageHeader>
            <Title headingLevel='h1' size={TitleSizes['3xl']} className='pf-u-pb-lg'>
                {intl.formatMessage(messages.systems)}
            </Title>
            {hasMalware() &&
            <Alert
                isInline
                variant="danger"
                ouiaId="WeDetectedMalware"
                title={intl.formatMessage(messages.weDetected)}
            />
            }
        </PageHeader>
        <Main>
            {(sigPageData.data?.hosts?.totalCount === 0 && !globalFilters())
                ? <EmptyAccount message={intl.formatMessage(messages.emptyAccountTableBody)} />
                : (<Grid hasGutter>
                    <GridItem lg={6} md={5} sm={12}>
                        <Suspense fallback={<Loading />}><StatusCard {...{ noSigData: true, ...sigPageData }} noSigData/></Suspense>
                    </GridItem>
                    <GridItem lg={6} md={7} sm={12}>
                        <Suspense fallback={<Loading />}><ChartCard sysStats={sigPageData}  chartStats={chartCmpData}/></Suspense>
                    </GridItem>
                    <GridItem span={12}>
                        <Suspense fallback={<Loading />}><SysTable /></Suspense>
                    </GridItem>
                </Grid>)
            }
        </Main>
    </React.Fragment>;
};

export default withRouter(Systems);
