import { GET_MALWARE_COUNT } from '../operations/queries';
import Loading from './Loading/Loading';
import NoPerms from '../Routes/NoPermissionsPage/NoPermissionsPage';
import PropTypes from 'prop-types';
import React from 'react';
import { hasMalware } from '../store/cache';
import { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';
import { useQuery } from '@apollo/client';

export function Permissions (props) {
    const { data, loading } = useQuery(GET_MALWARE_COUNT);
    const PERMS = {
        access: ['malware-detection:*:*', 'malware-detection:*:read']
    };
    const permsAccess = usePermissions('malware-detection', PERMS.access);

    !loading && hasMalware(Number(data?.ruleStats?.matchedCount) !== 0);

    if (permsAccess?.isLoading) {
        return <Loading />;
    } else if (!permsAccess?.hasAccess) {
        return <NoPerms />;
    } else if (!permsAccess?.isLoading && permsAccess?.hasAccess) {
        return <React.Fragment>
            { props.children}
        </React.Fragment>;
    }
}

Permissions.propTypes = {
    children: PropTypes.any
};
