import React from 'react';
import propTypes from 'prop-types';
import { Tooltip, TooltipPosition } from '@patternfly/react-core';
import {
  OutlinedQuestionCircleIcon,
  ExternalLinkAltIcon,
} from '@patternfly/react-icons';

export const gqlProps = {
  data: propTypes.object,
  loading: propTypes.bool,
  error: propTypes.object,
};

// Parse the match.metadata object and return a string of its 'key: value' items each on a separate line
export const expandMatchMetadata = (md) => {
  let output = `Source Type: ${md.source_type} ${
    md.md5sum || md.process_name ? '' : '(no additional metadata)'
  }`;
  output += md.md5sum
    ? `\nFile Type: ${md.file_type}\nFile Mime Type: ${md.mime_type}\nFile MD5Sum: ${md.md5sum}`
    : '';
  output += md.line
    ? `\nLine Number: ${md.line_number}\nLine: ${decodeURIComponent(md.line)}`
    : '';
  output += md.process_name ? `\nProcess Name: ${md.process_name}` : '';
  return output;
};

export const totalMatchesTitle = ({ tooltip, title }) => (
  <span style={{ whiteSpace: 'nowrap' }}>
    {title}
    <Tooltip
      key={title}
      position={TooltipPosition.right}
      content={<div>{tooltip}</div>}
    >
      <span aria-label="Action">
        {` `}
        <OutlinedQuestionCircleIcon color="var(--pf-global--secondary-color--100)" />
      </span>
    </Tooltip>
  </span>
);

// title case text string
export const capitalize = (string) =>
  string.replace(/\w\S*/g, (w) => w.replace(/^\w/, (c) => c.toUpperCase()));

export const strong = (str) => <strong>{str}</strong>;

export const RBACPermissions = {
  read: ['malware-detection:*:read'],
  write: ['malware-detection:*:*'],
};

// eslint-disable-next-line max-len
export const documentationURL =
  'https://access.redhat.com/documentation/en-us/red_hat_insights/1-latest/html/assessing_and_reporting_malware_signatures_on_rhel_systems/index';

// eslint-disable-next-line react/prop-types
export const DocumentationLink = ({ children }) => (
  <a href={documentationURL} target="__blank" rel="noopener noreferrer">
    {children} <ExternalLinkAltIcon />
  </a>
);
