import { useCallback } from 'react';
import { useApolloClient } from '@apollo/client';

export const useFetchSystems = ({ query, onComplete, onError }) => {
  const client = useApolloClient();

  return useCallback(
    (limit, offset, requestVariables = {}) =>
      client
        .query({
          query,
          fetchResults: true,
          fetchPolicy: 'no-cache',
          variables: {
            limit,
            offset,
            ...requestVariables,
          },
        })
        .then(({ data }) => {
          const entities = data?.hostsList || [];
          const result = {
            entities,
            meta: {
              ...(requestVariables.tags && { tags: requestVariables.tags }),
              totalCount: data?.hosts?.totalCount || 0,
            },
          };

          onComplete?.(result);
          return result;
        })
        .catch((error) => {
          if (onError) {
            onError(error);
            return { entities: [], meta: { totalCount: 0 } };
          } else {
            throw error;
          }
        }),
    [client, query, onComplete, onError]
  );
};
