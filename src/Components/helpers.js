import { expandMatchMetadata } from './Common';

export const matchStatusFilterMap = {
  NOT_REVIEWED: 'Not reviewed',
  IN_REVIEW: 'In review',
  ON_HOLD: 'On-hold',
  BENIGN: 'Benign - not malicious malware',
  TEST: 'Malware detection test',
  NO_ACTION: 'No action - risk accepted',
  RESOLVED: 'Resolved - malware removed',
};

export function formatDate(inputDate) {
  const date = new Date(inputDate);

  const day = date.getUTCDate().toString().padStart(2, '0');
  const month = date.toLocaleString('default', { month: 'long' });
  const year = date.getUTCFullYear();

  return `${day} ${month} ${year}`;
}

export const addRemoveItemInArray = (data, item) => {
  if (data.includes(item)) {
    return data.filter((x) => x != item);
  } else {
    return [...data, item];
  }
};

export const generateCode = (host) => {
  if (!host || !host.matches) {
    throw new Error('Host or host.matches is not defined');
  }

  return host.matches
    .map(
      (match, key) => `Match Source: ${match.source}
Offset: ${match.stringOffset}
Match Data: ${match.stringData}
Match Identifier: ${match.stringIdentifier}
Match Scan Date: ${new Date(match.scanDate).toUTCString()}
${
  match.metadata
    ? expandMatchMetadata(JSON.parse(match.metadata.replaceAll('\n', '')))
    : ''
}
${
  host.matches.length > 1 && key !== host.matches.length - 1
    ? '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
    : ''
}`
    )
    .join('\n');
};

export const isNewerThanThirtyDays = (inputDate) => {
  const date = new Date(inputDate).getTime();
  const thirtyDaysFromNow = new Date().getTime() - 30 * 24 * 60 * 60 * 1000;

  return date > thirtyDaysFromNow;
};
