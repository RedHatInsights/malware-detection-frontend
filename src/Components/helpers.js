import { expandMatchMetadata } from './Common';

export const filterValues = [
  { label: 'Not reviewed', value: 'NOT_REVIEWED' },
  { label: 'In review', value: 'IN_REVIEW' },
  { label: 'On-hold', value: 'ON_HOLD' },
  { label: 'Benign - not malicious malware', value: 'BENIGN' },
  { label: 'Malware detection test', value: 'TEST' },
  { label: 'No action - risk accepted', value: 'NO_ACTION' },
  { label: 'Resolved - malware removed', value: 'RESOLVED' },
];

export const matchStatusFilterMap = {
  NOT_REVIEWED: 'Not reviewed',
  IN_REVIEW: 'In review',
  ON_HOLD: 'On-hold',
  BENIGN: 'Benign - not malicious malware',
  TEST: 'Malware detection test',
  NO_ACTION: 'No action - risk accepted',
  RESOLVED: 'Resolved - malware removed',
};

export const generateCode = (host) => {
  if (!host || !host.matches) {
    throw new Error('Host or host.matches is not defined');
  }

  return host.matches
    .map(
      (match, key) => `Match Source: ${match.source}
Offset: ${match.stringOffset}
Match Data: ${match.stringData}
Match Identifier: ${match.stringIdentifier}
Match Scan Date: ${new Date(match.scanDate).toUTCString()}
${
  match.metadata
    ? expandMatchMetadata(JSON.parse(match.metadata.replaceAll('\n', '')))
    : ''
}
${
  host.matches.length > 1 && key !== host.matches.length - 1
    ? '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
    : ''
}`
    )
    .join('\n');
};
